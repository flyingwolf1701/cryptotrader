cryptotrader:
  description: "Main structure of the CryptoTrader application"
  
  # Root package structure
  root_structure:
    package: "src/cryptotrader"
    main_files:
      - __init__.py:
          description: "Main package exports and entry points"
      - main.py:
          description: "Application entry point that initializes the app and starts the main UI"
    
    # Main directories
    directories:
      - config:
          description: "Configuration package for the CryptoTrader application"
          main_files:
            - __init__.py: "Exports Secrets and get_logger"
            - secrets.py: "Secrets settings with environment variable handling"
            - logging.py: "Logging configuration utilities"
          reference_file: null  # No detailed YAML for this directory
      
      - gui:
          description: "Graphical user interface components"
          reference_file: null  # No detailed YAML for this directory
      
      - services:
          description: "Service implementations for external APIs"
          directories:
            - binance:
                description: "Binance API service implementation"
                reference_files:
                  - "binance_overview.yaml"
                  - "binance_file_graph.md"
                directories:
                  - models:
                      description: "Data models for Binance API"
                      reference_file: "models/__init__.py"
                  - restAPI:
                      description: "REST API implementation"
                      reference_files: 
                        - "_restAPI.yaml"
                        - "_restAPI_design_doc.md"
                  - websocketAPI:
                      description: "WebSocket API implementation"
                      reference_files:
                        - "wsDesignDoc.md"
                        - "wsStructureDoc.yaml"
                      subdirectories:
                        - account_requests:
                            reference_file: "account_requests/account_requests_structure.yaml"
                        - market_data_requests:
                            reference_file: "market_data_requests/market_data_structure.yaml"
                        - trading_requests:
                            reference_file: "trading_requests/trading_requests_structure.yaml"
                        - user_data_stream_requests:
                            reference_file: "user_data_stream_requests/user_data_stream_structure.yaml"
                        - streams:
                            reference_file: "streams/streams_structure.yaml"
                  - diagnostic_scripts:
                      description: "Testing and diagnostic scripts"
            
            # Other service implementations can be added here
            # - other_exchange:
            #     description: "Other exchange API implementation"
      
      - strategies:
          description: "Trading strategy implementations"
          reference_file: null  # No detailed YAML for this directory
      
      - utils:
          description: "Utility functions and helpers"
          reference_file: null  # No detailed YAML for this directory
  
  # Dependencies information
  dependencies:
    description: "External package dependencies"
    packages:
      - colorama: "Terminal text color formatting"
      - fastapi: "API framework for web interface"
      - httpx: "HTTP client for API requests"
      - matplotlib: "Plotting and visualization"
      - numpy: "Numerical computing"
      - python-dotenv: "Environment variable management"
      - ruff: "Python linter"
      - sqlalchemy: "Database ORM"
      - uvicorn: "ASGI server"
      - websockets: "WebSocket client implementation"
    dev_packages:
      - pytest: "Testing framework"
    reference_file: "pyproject.toml"